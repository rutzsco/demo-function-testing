trigger:
- master
- main

variables:
  azureSubscription: 'c189a8d0-6006-419f-b2c1-0d732ec1c087'
  functionAppName: 'demo-function-testing'
  resourceGroupName: 'demo-function-testing'
  storageAccountName: 'demofuncttest'
  region: 'centralus'
  vmImageName: 'vs2017-win2016'
  workingDirectory: '$(System.DefaultWorkingDirectory)/Api.Products'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        projects: '$(workingDirectory)/**/*.csproj'
        arguments: '--output publish_output --configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Publish project'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '$(workingDirectory)/**/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'App'
        publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'Infrastructure'
        artifact: 'Infrastructure'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureResourceGroupDeployment@2
            displayName: '1. CosmosDB - Deploy'
            inputs:
              azureSubscription: '$(azureSubscription))'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(region)'
              csmFile: '$(Pipeline.Workspace)/build/Infrastructure/cosmos-db.json'
              overrideParameters: '-accountName demo-function-testing-db-ci -databaseName ProductDB -location $(region) -container1Name "Products" -container1PartitionKey "/id" -throughput 400'
              deploymentOutputs: ResourceGroupDeploymentOutputs

          - task: AzureResourceGroupDeployment@2
            displayName: 'Create Function Infrastructure'
            inputs:
              azureSubscription: '$(azureSubscription)'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(region)'
              csmFile: '$(Pipeline.Workspace)/build/Infrastructure/function-app-consumption.json'
              overrideParameters: '-appName $(functionAppName) -storageAccountName $(storageAccountName)'
              deploymentOutputs: ResourceGroupDeploymentOutputs

          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/App/Api.Products.zip'